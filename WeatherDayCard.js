import React from 'react';
import { View, Text, StyleSheet } from 'react-native';
import Svg, { LinearGradient, Rect, Defs, Stop } from 'react-native-svg';
import { BlurView } from 'expo-blur'; // –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º BlurView

// –°–ª–æ–≤–∞—Ä—å –¥–ª—è –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è —É—Å–ª–æ–≤–∏–π –ø–æ–≥–æ–¥—ã –≤ —ç–º–æ–¥–∑–∏
const weatherIcons = {
  'partly-cloudy-day': 'üå§Ô∏è',
  'partly-cloudy-night': 'üåô',
  'clear-day': '‚òÄÔ∏è',
  'clear-night': 'üåå',
  'rain': 'üåßÔ∏è',
  'snow': '‚ùÑÔ∏è',
  'thunderstorm': '‚õàÔ∏è',
  'cloudy': '‚òÅÔ∏è',
  'fog': 'üå´Ô∏è',
  'wind': 'üå¨Ô∏è',
  'default': '‚ùì',
};

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —ç–º–æ–¥–∑–∏ –ø–æ —É—Å–ª–æ–≤–∏—é –ø–æ–≥–æ–¥—ã
const getWeatherIcon = (conditions) => {
  const key = conditions.toLowerCase().replace(/ /g, '-');
  return weatherIcons[key] || weatherIcons['default'];
};

const WeatherDayCard = ({ day }) => {
  const icon = getWeatherIcon(day.conditions);

  // –û–∫—Ä—É–≥–ª—è–µ–º —Å—Ä–µ–¥–Ω—é—é —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä—É –¥–ª—è –ø—Ä–æ–≥—Ä–µ—Å—Å-–±–∞—Ä–∞
  const avgTemp = Math.round((day.tempMax + day.tempMin) / 2);
  const progressWidth = ((avgTemp - day.tempMin) / (day.tempMax - day.tempMin)) * 100;

  return (
    <View style={styles.cardContainer}>
      {/* –î–µ–Ω—å –Ω–µ–¥–µ–ª–∏ */}
      <Text style={styles.date}>{day.date}</Text>

      {/* –ò–∫–æ–Ω–∫–∞ –∏ —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–π —Å—Ç—Ä–æ–∫–µ */}
      <View style={styles.weatherRow}>
        <Text style={styles.weatherIcon}>{icon}</Text>
        <View style={styles.temperatureContainer}>
          <Text style={styles.tempMin}>{Math.round(day.tempMin)}¬∞</Text>

          {/* –ü—Ä–æ–≥—Ä–µ—Å—Å-–±–∞—Ä —Å glass-–¥–∏–∑–∞–π–Ω–æ–º */}
          <View style={styles.progressBarGlassContainer}>
            <Svg width="100%" height="8">
              <Defs>
                <LinearGradient id="gradient" x1="0" y1="0" x2="100%" y2="0">
                  <Stop offset="0%" stopColor="#4fc3f7" />
                  <Stop offset="100%" stopColor="#f44336" />
                </LinearGradient>
              </Defs>
              <Rect
                x="0"
                y="0"
                width={`${progressWidth}%`}
                height="8"
                rx="4"
                fill="url(#gradient)"
              />
            </Svg>
          </View>

          <Text style={styles.tempMax}>{Math.round(day.tempMax)}¬∞</Text>
        </View>
      </View>
    </View>
  );
};

export default WeatherDayCard;

const styles = StyleSheet.create({
  cardContainer: {
    flexDirection: 'column',
    backgroundColor: 'rgba(255, 255, 255, 0.1)',
    paddingVertical: 15,
    paddingHorizontal: 20,
    borderRadius: 12,
    marginBottom: 12,
    marginHorizontal: 10,
    elevation: 2,
    shadowColor: '#000',
    shadowOffset: { width: 0, height: 2 },
    shadowOpacity: 0.15,
    shadowRadius: 4,
    backdropFilter: 'blur(10px)', // –†–∞–±–æ—Ç–∞–µ—Ç —Ç–æ–ª—å–∫–æ –Ω–∞ iOS –∏–ª–∏ —á–µ—Ä–µ–∑ —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ –ª–∏–±—ã –Ω–∞ Android
    borderColor: 'rgba(255, 255, 255, 0.2)',
    borderWidth: 1,
  },
  date: {
    fontSize: 16,
    color: '#ffffffcc',
    fontWeight: '500',
    marginBottom: 8,
  },
  weatherRow: {
    flexDirection: 'row',
    alignItems: 'center',
    justifyContent: 'space-between',
  },
  weatherIcon: {
    fontSize: 26,
    color: '#fff',
    marginRight: 12,
  },
  temperatureContainer: {
    flex: 1,
    flexDirection: 'row',
    justifyContent: 'space-between',
    alignItems: 'center',
  },
  tempMin: {
    fontSize: 16,
    color: '#aeeaff',
    fontWeight: '500',
    minWidth: 30,
    textAlign: 'left',
  },
  tempMax: {
    fontSize: 16,
    color: '#ff9a9a',
    fontWeight: '500',
    minWidth: 30,
    textAlign: 'right',
  },
  progressBarGlassContainer: {
    flex: 1,
    height: 8,
    marginHorizontal: 8,
    borderRadius: 4,
    overflow: 'hidden',
    backgroundColor: 'rgba(255, 255, 255, 0.2)', // –ø–æ–ª—É–ø—Ä–æ–∑—Ä–∞—á–Ω—ã–π —Ñ–æ–Ω
  },
});